Disassembly Listing for Ex3_1
Generated From:
C:/microchip/harmony/v2_06/apps/MINF/Exercices/Ex3_1.X/dist/default/production/Ex3_1.X.production.elf
21 nov. 2024 16:07:45

---  c:/microchip/harmony/v2_06/apps/minf/exercices/ex3_1.x/main_ex3_1.c  -------------------------------
1:                   #include <stddef.h>                     // Defines NULL
2:                   #include <stdbool.h>                    // Defines true
3:                   #include <stdlib.h>                     // Defines EXIT_FAILURE
4:                   #include <stdint.h>                     // Defines EXIT_FAILURE
5:                   
6:                   void main() {
9D000000  27BDFFF0   ADDIU SP, SP, -16
7:                   
8:                      volatile uint8_t i;
9:                      volatile bool bNegatif;
10:                     volatile char c;
11:                     volatile uint8_t code;
12:                  
13:                     volatile int8_t  a = 7;
9D000004  24020007   ADDIU V0, ZERO, 7
9D000008  A3A20003   SB V0, 3(SP)
14:                     volatile int16_t b = 321;
9D00000C  24020141   ADDIU V0, ZERO, 321
9D000010  A7A20004   SH V0, 4(SP)
15:                     volatile int32_t  d = 0x12345678;
9D000014  3C021234   LUI V0, 4660
9D000018  24425678   ADDIU V0, V0, 22136
9D00001C  AFA20008   SW V0, 8(SP)
16:                  
17:                     // addition 8 bits
18:                     d = d + 0x31;
9D000020  8FA20008   LW V0, 8(SP)
9D000024  24420031   ADDIU V0, V0, 49
9D000028  AFA20008   SW V0, 8(SP)
19:                  
20:                     // addition 16 bits
21:                     b = b + 0x123;
9D00002C  97A20004   LHU V0, 4(SP)
9D000030  24420123   ADDIU V0, V0, 291
9D000034  7C021620   SEH V0, V0
9D000038  A7A20004   SH V0, 4(SP)
22:                  
23:                     // addition 32 bits
24:                    d = d + 0x10000;
9D00003C  8FA30008   LW V1, 8(SP)
9D000040  3C020001   LUI V0, 1
9D000044  00621021   ADDU V0, V1, V0
9D000048  AFA20008   SW V0, 8(SP)
25:                  
26:                     // If then else
27:                     if (a >= 0) {
9D00004C  93A20003   LBU V0, 3(SP)
9D000050  7C021420   SEB V0, V0
9D000054  04400004   BLTZ V0, main
9D000058  24020001   ADDIU V0, ZERO, 1
28:                        bNegatif = 0;
9D00005C  A3A00001   SB ZERO, 1(SP)
9D000060  0B40001B   J main
9D000064  00000000   NOP
29:                     } else {
30:                        bNegatif = 1;
9D000068  A3A20001   SB V0, 1(SP)
31:                     }
32:                  
33:                     // boucle for et switch
34:                     for (i=0; i<6 ; i++) {
9D00006C  A3A00000   SB ZERO, 0(SP)
9D000070  93A20000   LBU V0, 0(SP)
9D000074  304200FF   ANDI V0, V0, 255
9D000078  2C420006   SLTIU V0, V0, 6
9D00007C  10400023   BEQ V0, ZERO, main
9D000080  2402000A   ADDIU V0, ZERO, 10
9D0000E8  93A20000   LBU V0, 0(SP)
9D0000EC  24420001   ADDIU V0, V0, 1
9D0000F0  304200FF   ANDI V0, V0, 255
9D0000F4  A3A20000   SB V0, 0(SP)
9D0000F8  93A20000   LBU V0, 0(SP)
9D0000FC  304200FF   ANDI V0, V0, 255
9D000100  2C420006   SLTIU V0, V0, 6
9D000104  1440FFE6   BNE V0, ZERO, main
9D000108  2402000A   ADDIU V0, ZERO, 10
35:                     
36:                        switch (i) {
9D000084  24030002   ADDIU V1, ZERO, 2
9D00008C  24040003   ADDIU A0, ZERO, 3
9D000094  24050001   ADDIU A1, ZERO, 1
9D0000A0  93A20000   LBU V0, 0(SP)
9D0000A4  304200FF   ANDI V0, V0, 255
9D0000A8  10430008   BEQ V0, V1, main
9D0000AC  00000000   NOP
9D0000B0  10440009   BEQ V0, A0, main
9D0000B4  00000000   NOP
9D0000B8  1445000A   BNE V0, A1, main
9D0000BC  00000000   NOP
37:                           case 1 : code = 'A' ; break;
9D00009C  24060041   ADDIU A2, ZERO, 65
9D0000C0  A3A60002   SB A2, 2(SP)
9D0000C4  0B40003A   J main
9D0000C8  00000000   NOP
38:                           case 2 : code = 'B' ; break;
9D000088  24090042   ADDIU T1, ZERO, 66
9D0000CC  A3A90002   SB T1, 2(SP)
9D0000D0  0B40003A   J main
9D0000D4  00000000   NOP
39:                           case 3 : code = 'C' ; break;
9D000090  24080043   ADDIU T0, ZERO, 67
9D0000D8  A3A80002   SB T0, 2(SP)
9D0000DC  0B40003A   J main
9D0000E0  00000000   NOP
40:                           default : code = 'Z'; break;
9D000098  2407005A   ADDIU A3, ZERO, 90
9D0000E4  A3A70002   SB A3, 2(SP)
41:                        }
42:                     }
43:                  
44:                     // boucle while
45:                     i=10;
9D00010C  A3A20000   SB V0, 0(SP)
46:                     while (i > 0 ) {
9D000110  93A20000   LBU V0, 0(SP)
9D000114  304200FF   ANDI V0, V0, 255
9D000118  10400009   BEQ V0, ZERO, main
9D00011C  00000000   NOP
9D000130  93A20000   LBU V0, 0(SP)
9D000134  304200FF   ANDI V0, V0, 255
9D000138  1440FFF9   BNE V0, ZERO, main
9D00013C  00000000   NOP
47:                         i--;
9D000120  93A20000   LBU V0, 0(SP)
9D000124  2442FFFF   ADDIU V0, V0, -1
9D000128  304200FF   ANDI V0, V0, 255
9D00012C  A3A20000   SB V0, 0(SP)
48:                     }
49:                  }
9D000140  03E00008   JR RA
9D000144  27BD0010   ADDIU SP, SP, 16
